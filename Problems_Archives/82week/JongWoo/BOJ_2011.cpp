#include <iostream>
#include <string>

using namespace std;

const int MOD = 1'000'000;

string pw;
int dp[5'001]; // dp[i]: 길이가 i일 때, 나올 수 있는 해석의 가짓수를 1,000,000으로 나눈 나머지

// ex) 25114
// i = 1: 2 ---------------------------------------------------------------(1개)
// i = 2: 2-5, [25] -------------------------------------------------------(2개)
// i = 3: 2-5-1, 25-1 -----------------------------------------------------(2개)
// i = 4: 2-5-1-1, 25-1-1, [25-11], [2-5-11] ------------------------------(4개)
// i = 5: 2-5-1-1-4, 25-1-1-4, 25-11-4, 2-5-11-4, [2-5-1-14], [25-1-14] ---(6개)
// []는 i - 2번째 값들에 stoi(pw[i - 1] + pw[i])를 이어 붙여 만들어진 것

int main()
{
	ios::sync_with_stdio(false);
	cin.tie(nullptr);

	cin >> pw;

	if (pw[0] == '0')
	{
		cout << 0 << '\n';
		return 0;
	}

	int answer = 0;

	// 계산에 편의를 위해 가장 앞에 빈 칸(' ')을 추가한다.
	pw = ' ' + pw;
	dp[0] = dp[1] = 1;

	for (int i = 2; i < pw.length(); ++i)
	{
		int cur = pw[i] - '0';

		if (cur > 0)
		{
			dp[i] = dp[i - 1];
		}

		int pre = pw[i - 1] - '0';
		int tot = 10 * pre + cur;

		if ((10 <= tot) && (tot <= 26))
		{
			dp[i] = (dp[i] + dp[i - 2]) % MOD;
		}
	}

	answer = dp[pw.length() - 1];
	cout << answer << '\n';
}
