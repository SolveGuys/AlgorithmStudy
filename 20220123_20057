#include <iostream>
using namespace std;

int n;
const int maxi = 500;
int maps[maxi][maxi];//지도
int percent[10] = {1,1,2,2,7,7,10,10,5,55};
int sand_x[4][10] = {
    {-1,1,-2,2,-1,1,-1,1,0,0},
    {-1,-1,0,0,0,0,1,1,2,1},
    {-1,1,-2,2,-1,1,-1,1,0,0},
    {1,1,0,0,0,0,-1,-1,-2,-1}
};
int sand_y[4][10] = {
    {1,1,0,0,0,0,-1,-1,-2,-1},
    {-1,1,-2,2,-1,1,-1,1,0,0},
    {-1,-1,0,0,0,0,1,1,2,1},
    {-1,1,-2,2,-1,1,-1,1,0,0}
};
//축이동
int dx[4] = {0,1,0,-1};
int dy[4] = {-1,0,1,0};

//입력
void input(){
    cin>>n;
    for(int i=0;i<n;i++){
        for(int j=0;j<n;j++){
            cin>>maps[i][j];
        }
    }
}

//밖으로 나간 모래의 양
int scatter(int r, int c,int d){
    int out = 0;
    int amount = maps[r][c];
    if(amount==0){//모래가 없다면 패스
        return 0;
    }
    for(int i=0;i<10;i++){
        int next_r = r + sand_x[d][i];
        int next_c = c + sand_y[d][i];
        int sand_amount = maps[r][c]*percent[i]/100;
        
        //맨 마지막
        if(i==9){
            sand_amount = amount;
        }
        //범위를 벗어나면
        if(next_r<0 || next_r>=n || next_c<0 || next_c>=n){
            out+=sand_amount;
        }else{
            maps[next_r][next_c]+=sand_amount;
        }
        amount-=sand_amount;//남은 모래의 양
    }
    return out;
}

//토네이도 이동
void tornado_move(){
    int ans = 0;//밖으로 나간 모래의 양
    int length = 0;//이동 길이
    int x = n/2;int y = n/2;//시작지점
    
    while(true){
        //방향 결정
        for(int dir=0;dir<4;dir++){
            if(dir%2==0){
                length++;
            }
            //직선이동
            for(int i=0;i<length;i++){
                x+=dx[dir];
                y+=dy[dir];
                ans+=scatter(x,y,dir);//위치, 방향
                
                //이동 종료
                if(x==0 && y==0){
                    cout<<ans;
                    return;
                }
            }
        }
    }
    
}
int main(){
    input();//입력
    tornado_move();//토네이도 이동
    return 0;
}
